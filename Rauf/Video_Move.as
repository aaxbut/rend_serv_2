package  {import flash.display.DisplayObject;import flash.display.DisplayObjectContainer;import flash.display.MovieClip;import flash.display.StageDisplayState;import flash.events.Event;import flash.events.MouseEvent;import flash.events.TimerEvent;import flash.media.SoundTransform;import flash.utils.Timer;public class Video_Move extends MovieClip {        var play_pause = false;        var contTimer:Timer = new Timer(2000,1);    var st:SoundTransform = new SoundTransform(1,0);        var nowFS = false;    var numOfHeads:int = 0;				public function Video_Move() {            			paused.visible = false;            controls.play_btn.visible = true;            controls.pause_btn.visible = false;            controls.ns_btn.visible = false;            controls.seekBar_mc.progress_mc.width = 1;            videoContent.stop();            controls.play_btn.addEventListener(MouseEvent.CLICK, playVideo);            controls.pause_btn.addEventListener(MouseEvent.CLICK, pauseVideo);            controls.seekBar_mc.seek_listener.addEventListener(MouseEvent.CLICK, chooseSeek);            controls.fs_btn.addEventListener(MouseEvent.CLICK, gotoFullScreen);            controls.ns_btn.addEventListener(MouseEvent.CLICK, gotoNormal);            contTimer.start();            contTimer.addEventListener(TimerEvent.TIMER, hideControls);            videoContent.addEventListener(MouseEvent.MOUSE_MOVE, showControls);            paused.addEventListener(MouseEvent.MOUSE_MOVE, showControls);            videoContent.addEventListener(MouseEvent.CLICK, changePlayPause);            paused.addEventListener(MouseEvent.CLICK, changePlayPause);            controls.addEventListener(MouseEvent.MOUSE_MOVE, showControls);            controls.snd.sndbar.snd_listener.addEventListener(MouseEvent.MOUSE_DOWN,changeSound);            controls.addEventListener(Event.ENTER_FRAME, chook);            this.soundTransform = st;            controls.snd.sndbar.snd_mc.width = 50;            paused.visible = true;            paused.buttonMode = true;            videoContent.buttonMode = true;            takeAHeads();            playIt();            //txt.text = stage.fullScreenHeight.toString() + " / " + controls.y;		}    function chook(e:Event){        if(stage.displayState == StageDisplayState.NORMAL && nowFS){            nowFS = false;            stage.displayState = StageDisplayState.NORMAL;            controls.fs_btn.visible = true;            controls.ns_btn.visible = false;            controls.pause_btn.scaleX = controls.pause_btn.scaleY = 1;            controls.play_btn.scaleX = controls.play_btn.scaleY = 1;            controls.snd.scaleX = controls.snd.scaleY = 1;            controls.ns_btn.scaleX = controls.ns_btn.scaleY = 1;            controls.fs_btn.scaleX = controls.fs_btn.scaleY = 1;            controls.seekBar_mc.scaleY = controls.seekBar_mc.scaleY = 1;            controls.seekBar_mc.bg.width = controls.seekBar_mc.seek_listener.width = 351;            controls.seekBar_mc.progress_mc.width = (videoContent.currentFrame / videoContent.totalFrames) * controls.seekBar_mc.seek_listener.width;            controls.bg.scaleY = 1;            controls.pause_btn.x = controls.play_btn.x = 15;            controls.pause_btn.y = controls.play_btn.y = 5;            controls.seekBar_mc.x = 53;            controls.seekBar_mc.y = 11;            controls.snd.x = 442;            controls.snd.y = 8;            controls.ns_btn.x = controls.fs_btn.x = 525;            controls.ns_btn.y = controls.fs_btn.y = 16;            controls.y = 278;        }    }    function changeSoundOFF(e:Event){        stage.removeEventListener(MouseEvent.MOUSE_MOVE,changeSoundOnMove);        stage.removeEventListener(MouseEvent.MOUSE_UP,changeSoundOFF);        trace(st.volume)    }    function changeSound(e:Event){        var newPlace;        if(stage.displayState == StageDisplayState.FULL_SCREEN){            newPlace = (mouseX-controls.snd.x) / (522/stage.fullScreenWidth);        }else{            newPlace = mouseX-controls.snd.x;        }        controls.snd.sndbar.snd_mc.width = newPlace;        st = new SoundTransform(newPlace*0.02,0);        this.soundTransform = st;        stage.addEventListener(MouseEvent.MOUSE_MOVE,changeSoundOnMove);        stage.addEventListener(MouseEvent.MOUSE_UP,changeSoundOFF);    }    function changeSoundOnMove(e:MouseEvent){        var newPlace;        if(stage.displayState == StageDisplayState.FULL_SCREEN){            newPlace = (mouseX-controls.snd.x) / (522/stage.fullScreenWidth);        }else{            newPlace = mouseX-controls.snd.x;        }        if(newPlace<0){            newPlace=0;        }        if(newPlace>50){            newPlace=50;        }        controls.snd.sndbar.snd_mc.width = newPlace;        st = new SoundTransform(newPlace*0.02,0);        this.soundTransform = st;    }    function hideControls(e:Event){        controls.visible = false;    }    function showControls(e:Event){        contTimer.stop();        controls.visible = true;        contTimer.start();    }    function changePlayPause(e:Event){        if(play_pause){            stopIt();        }else{            playIt();        }    }    function playIt(){        videoContent.play();        if(numOfHeads>0){            videoContent.rot1.play();        }        if(numOfHeads>1){            videoContent.rot2.play();        }        if(numOfHeads>2){            videoContent.rot3.play();        }        if(numOfHeads>3){            videoContent.rot4.play();        }if(numOfHeads>4){            videoContent.rot5.play();        }        if(numOfHeads>5){            videoContent.rot6.play();        }        if(numOfHeads>6){            videoContent.rot7.play();        }        play_pause = true;        paused.visible = false;        controls.play_btn.visible = false;        controls.pause_btn.visible = true;        videoContent.addEventListener(Event.ENTER_FRAME, seekBarMove)    }    function stopIt(){        videoContent.stop();        if(numOfHeads>0){            videoContent.rot1.stop();        }        if(numOfHeads>1){            videoContent.rot2.stop();        }        if(numOfHeads>2){            videoContent.rot3.stop();        }        if(numOfHeads>3){            videoContent.rot4.stop();        }if(numOfHeads>4){            videoContent.rot5.stop();        }        if(numOfHeads>5){            videoContent.rot6.stop();        }        if(numOfHeads>6){            videoContent.rot7.stop();        }        paused.visible = true;        play_pause = false;        controls.play_btn.visible = true;        controls.pause_btn.visible = false;        videoContent.removeEventListener(Event.ENTER_FRAME, seekBarMove)    }    function playVideo(e:MouseEvent){        playIt();        /*        videoContent.play();        if(numOfHeads>0){            videoContent.rot1.play();        }        if(numOfHeads>1){            videoContent.rot2.play();        }        if(numOfHeads>2){            videoContent.rot3.play();        }        if(numOfHeads>3){            videoContent.rot4.play();        }if(numOfHeads>4){            videoContent.rot5.play();        }        if(numOfHeads>5){            videoContent.rot6.play();        }        if(numOfHeads>6){            videoContent.rot7.play();        }        //videoContent.gotoAndPlay(videoContent.currentFrame+1);        play_pause = true;        controls.play_btn.visible = false;        controls.pause_btn.visible = true;        videoContent.addEventListener(Event.ENTER_FRAME, seekBarMove)        */    }    function pauseVideo(e:MouseEvent){        stopIt();        /*        videoContent.stop();        if(numOfHeads>0){            videoContent.rot1.stop();        }        if(numOfHeads>1){            videoContent.rot2.stop();        }        if(numOfHeads>2){            videoContent.rot3.stop();        }        if(numOfHeads>3){            videoContent.rot4.stop();        }if(numOfHeads>4){            videoContent.rot5.stop();        }        if(numOfHeads>5){            videoContent.rot6.stop();        }        if(numOfHeads>6){            videoContent.rot7.stop();        }        play_pause = false;        controls.play_btn.visible = true;        controls.pause_btn.visible = false;        videoContent.removeEventListener(Event.ENTER_FRAME, seekBarMove)                */    }    function seekBarMove(e:Event){        controls.seekBar_mc.progress_mc.width = (videoContent.currentFrame / videoContent.totalFrames) * controls.seekBar_mc.seek_listener.width;    }    function chooseSeek(e:MouseEvent){        var newPlace = mouseX-controls.seekBar_mc.x;        controls.seekBar_mc.progress_mc.width = Math.round(newPlace);        if(play_pause){            videoContent.gotoAndPlay(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            if(numOfHeads>0){                videoContent.rot1.gotoAndPlay(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            }            if(numOfHeads>1){                videoContent.rot2.gotoAndPlay(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            }            if(numOfHeads>2){                videoContent.rot3.gotoAndPlay(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            }            if(numOfHeads>3){                videoContent.rot4.gotoAndPlay(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            }if(numOfHeads>4){                videoContent.rot5.gotoAndPlay(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            }            if(numOfHeads>5){                videoContent.rot6.gotoAndPlay(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            }            if(numOfHeads>6){                videoContent.rot7.gotoAndPlay(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            }        }else{            videoContent.gotoAndStop(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            if(numOfHeads>0){                videoContent.rot1.gotoAndStop(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            }            if(numOfHeads>1){                videoContent.rot2.gotoAndStop(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            }            if(numOfHeads>2){                videoContent.rot3.gotoAndStop(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            }            if(numOfHeads>3){                videoContent.rot4.gotoAndStop(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            }if(numOfHeads>4){                videoContent.rot5.gotoAndStop(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            }            if(numOfHeads>5){                videoContent.rot6.gotoAndStop(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            }            if(numOfHeads>6){                videoContent.rot7.gotoAndStop(Math.round(newPlace*(videoContent.totalFrames/controls.seekBar_mc.seek_listener.width)));            }        }    }    function gotoFullScreen(e:MouseEvent){        stage.displayState = StageDisplayState.FULL_SCREEN;        trace("we full");        nowFS = true;        controls.fs_btn.visible = false;        controls.ns_btn.visible = true;        var scaler = 522/stage.fullScreenWidth;        controls.pause_btn.scaleX = controls.pause_btn.scaleY = scaler;        controls.play_btn.scaleX = controls.play_btn.scaleY = scaler;        controls.play_btn.scaleX = controls.play_btn.scaleY = scaler;        controls.snd.scaleX = controls.snd.scaleY = scaler;        controls.ns_btn.scaleX = controls.ns_btn.scaleY = scaler;        controls.fs_btn.scaleX = controls.fs_btn.scaleY = scaler;        controls.seekBar_mc.scaleY = scaler;        controls.bg.scaleY = scaler;        controls.pause_btn.x = controls.play_btn.x = 15*scaler;        controls.pause_btn.y = controls.play_btn.y = 5*scaler;        controls.seekBar_mc.x = 53*scaler;        controls.seekBar_mc.y = 11*scaler;        controls.snd.x =stage.fullScreenWidth*scaler-10// 420*scaler;        controls.snd.y = 8*scaler;        controls.seekBar_mc.bg.width = controls.seekBar_mc.seek_listener.width = controls.snd.x - controls.seekBar_mc.x-10;        controls.seekBar_mc.progress_mc.width = (videoContent.currentFrame / videoContent.totalFrames) * controls.seekBar_mc.seek_listener.width;        controls.ns_btn.x = controls.fs_btn.x = stage.fullScreenWidth*scaler +20//- 10*scaler;//525*scaler;        controls.ns_btn.y = controls.fs_btn.y = 16*scaler;        controls.y += (91*(stage.fullScreenHeight/1140))*scaler;        //txt.text = stage.fullScreenHeight.toString()+ " / "  + controls.y;    }    function gotoNormal(e:MouseEvent){        stage.displayState = StageDisplayState.NORMAL;        nowFS = false;        trace("we norm");        controls.fs_btn.visible = true;        controls.ns_btn.visible = false;        controls.pause_btn.scaleX = controls.pause_btn.scaleY = 1;        controls.play_btn.scaleX = controls.play_btn.scaleY = 1;        controls.snd.scaleX = controls.snd.scaleY = 1;        controls.ns_btn.scaleX = controls.ns_btn.scaleY = 1;        controls.fs_btn.scaleX = controls.fs_btn.scaleY = 1;        controls.seekBar_mc.scaleY = controls.seekBar_mc.scaleY = 1;        controls.seekBar_mc.bg.width = controls.seekBar_mc.seek_listener.width = 351;        controls.seekBar_mc.progress_mc.width = (videoContent.currentFrame / videoContent.totalFrames) * controls.seekBar_mc.seek_listener.width;        controls.bg.scaleY = 1;        controls.pause_btn.x = controls.play_btn.x = 15;        controls.pause_btn.y = controls.play_btn.y = 5;        controls.seekBar_mc.x = 53;        controls.seekBar_mc.y = 11;        controls.snd.x = 442;        controls.snd.y = 8;        controls.ns_btn.x = controls.fs_btn.x = 525;        controls.ns_btn.y = controls.fs_btn.y = 16;        controls.y = 278;    }    function takeAHeads(){        try{            if(videoContent.getChildByName(videoContent.rot1)==null){                numOfHeads++;            }        } catch (e:Error){            trace("словили егора 1 " +e);        }        try{            if(videoContent.getChildByName(videoContent.rot2)==null){                numOfHeads++;            }        } catch (e:Error){            trace("словили егора 2 " +e);        }        try{            if(videoContent.getChildByName(videoContent.rot3)==null){                numOfHeads++;            }        } catch (e:Error){            trace("словили егора 3 " +e);        }        try{            if(videoContent.getChildByName(videoContent.rot4)==null){                numOfHeads++;            }        } catch (e:Error){            trace("словили егора 4 " +e);        }        try{            if(videoContent.getChildByName(videoContent.rot5)==null){                numOfHeads++;            }        } catch (e:Error){            trace("словили егора 5 " +e);        }        try{            if(videoContent.getChildByName(videoContent.rot6)==null){                numOfHeads++;            }        } catch (e:Error){            trace("словили егора 6 " +e);        }        try{            if(videoContent.getChildByName(videoContent.rot7)==null){                numOfHeads++;            }        } catch (e:Error){            trace("словили егора 7 " +e);        }        trace("голов накопилось аж "+numOfHeads + " штук!");    }	}	}